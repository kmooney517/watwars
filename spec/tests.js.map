{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","js/empire.js","js/republic.js","js/tests.js"],"names":[],"mappings":"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","file":"tests.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","let EmpireFighter = function(obj) {\n\n\tthis.health = 100;\n\n\tthis.hit = function (num) {\n\t\tlet hitPoints = num || 10;\n\t\treturn this.health = this.health - hitPoints;\n\n\n\n\n\t};\n};\n\nexport default EmpireFighter;\n\n","// Constructor Function for all Fighters\nlet RepublicFighter = function(obj) {\n\n\tthis.health = 100;\n\n\n\tthis.hit = function (num) {\n\t\tlet hitPoints = num || 10;\n\t\treturn this.health = this.health - hitPoints;\n\t};\n};\n\nexport default RepublicFighter;\n\n","import RepublicFighter from './republic.js';\nimport EmpireFighter from './empire.js';\n\n(function() {\n  'use strict';\n\n  \tdescribe('About my Republic Fighter', function(){\n\t\tbeforeEach( function() {\n  \t\t\twindow.x = new RepublicFighter();\n  \t\t\twindow.captainPlanet = new RepublicFighter();\n  \t\t})\n\n\t\tdescribe('creating a republic fighter', function() {\n\t\t    it('create an instance of a republic fighter', function() {\n\t\t        expect(x instanceof RepublicFighter).to.equal(true);\n\t\t    });\n\t\t});\n\n\t\tdescribe('republic fighters health', function() {\n\t\t\tit('should have full health when the instance is created', function() {\n\t\t\t\texpect(x.health).to.equal(100);\n\t\t\t})\n\t\t})\n\n\t\tdescribe('player taking damage', function() {\n      \t\tit('should lower the score, after getting hit', function() {\n        \t\tx.hit();\n        \t\texpect(x.health).to.be.below(100);\n      \t\t})\n    \t});\n\t})\n\n\n\tdescribe('About my Empire Fighter', function() {\n\t\tbeforeEach( function() {\n\t\t\twindow.y = new EmpireFighter();\n\t\t})\n\n\t\tdescribe('creating an empire fighter', function() {\n\t\t\tit('create an instance of an empire fighter', function() {\n\t\t\t\texpect(y instanceof EmpireFighter).to.equal(true);\n\t\t\t});\n\t\t});\n\n\t\tdescribe('empire fighters health', function() {\n\t\t\tit('should have full health when the instance is created', function() {\n\t\t\t\texpect(y.health).to.equal(100);\n\t\t\t})\n\t\t})\n\n\t\tdescribe('player taking damage', function() {\n      \t\tit('should lower the score, after getting hit', function() {\n        \t\ty.hit();\n        \t\texpect(y.health).to.be.below(100);\n      \t\t})\n    \t});\n\n\n\t})\n\n\n}());"]}